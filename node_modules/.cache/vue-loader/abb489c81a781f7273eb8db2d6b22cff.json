{"remainingRequest":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\temp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\temp.vue","mtime":1543894471023},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nvar request = require('request')\r\n\r\nvar data;\r\nvar hr = \"\";\r\nvar mnt = \"\";\r\nvar min10 = 20;\r\nvar max10 = 0;\r\nvar min25 = 20;\r\nvar max25 = 0;\r\nvar temp10max = 0;\r\nvar temp10min = 0;\r\nvar temp25max = 0;\r\nvar temp25min = 0;\r\nvar body;\r\nvar da;\r\nvar temp;\r\nvar DataR = {};\r\nvar stats = {};\r\nvar aves = [];\r\nstats.aves = [];\r\nvar count = 0;\r\nvar hold10 = 0;\r\nvar hold25 = 0;\r\nvar btemp = false;\r\nvar MinAv10 = 0;\r\nvar MaxAv10 = 0;\r\nvar MinAv25 = 0;\r\nvar MaxAv25 = 0;\r\n\r\nDataR.h1 = []; DataR.h2 = []; DataR.h3 = []; DataR.h4 = [];DataR.h5 = [];\r\nDataR.h6 = []; DataR.h7 = []; DataR.h8 = []; DataR.h8 = []; DataR.h9 = [];\r\nDataR.h10 = []; DataR.h11 = []; DataR.h12 = []; DataR.h13 = []; DataR.h14 = [];\r\nDataR.h15 = []; DataR.h16 = []; DataR.h17 = []; DataR.h18 = []; DataR.h19 = [];\r\nDataR.h20 = []; DataR.h21 = []; DataR.h22 = []; DataR.h23 = [];\r\n\r\n\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      dailySalesChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [0, 17, 7, 17, 23, 18, 150]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 150, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      dataCompletedTasksChart: {\r\n        data: {\r\n          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\r\n          series: [\r\n            [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      emailsSubscriptionChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n          ]\r\n        },\r\n        options: {\r\n          axisX: {\r\n            showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 5,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        },\r\n        responsiveOptions: [\r\n          ['screen and (max-width: 640px)', {\r\n            seriesBarDistance: 5,\r\n            axisX: {\r\n              labelInterpolationFnc: function (value) {\r\n                return value[0]\r\n              }\r\n            }\r\n          }]\r\n        ]\r\n      },\r\n      headers: [\r\n        {\r\n          sortable: false,\r\n          text: 'ID',\r\n          value: 'id'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM10',\r\n          value: 'pm10'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM25',\r\n          value: 'pm25',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Date',\r\n          value: 'date',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Time',\r\n          value: 'time',\r\n          align: 'right'\r\n        }\r\n      ],\r\n      items: [\r\n       \r\n      ],\r\n      tabs: 0,\r\n      list: {\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    complete (index) {\r\n      this.list[index] = !this.list[index]\r\n    },\r\n      dataProc () {\r\n      request.get('http://localhost:3000',function(err,res,body1){\r\n      if(err); //TODO: handle err\r\n      if(res.statusCode !== 200 ); //etc\r\n      //console.log(body1);\r\n      da = JSON.parse(body1);\r\n      //console.log(da);\r\n      body = body1;\r\n      })\r\n      //console.log(da);\r\n      var a = 0\r\n      for(a in body){\r\n          //DataR.vals.push(\"SOMETHING\");\r\n          try{\r\n              //console.log(\"INININ\");\r\n              hr = da.vals[a].Time;\r\n              mnt = da.vals[a].Time;\r\n              mnt = mnt.substring(mnt.indexOf(\"m\") - 2, mnt.indexOf(\"m\"))\r\n              hr = hr.substring(0,hr.indexOf(\"h\"));\r\n              mnt = mnt.trim();\r\n              hr = hr.trim();\r\n              this.items.push({\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25, \"Date\": da.vals[a].Date, \"Time\": da.vals[a].Time})\r\n              temp = {\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25};\r\n              //console.log(temp);\r\n              //DataR.vals.push(\"SOMETHING\");\r\n\r\n              if(hr === \"1\")  DataR.h1.push(temp);\r\n              if(hr === \"2\")  DataR.h2.push(temp);\r\n              if(hr === \"3\")  DataR.h3.push(temp);\r\n              if(hr === \"4\")  DataR.h4.push(temp);\r\n              if(hr === \"5\")  DataR.h5.push(temp);\r\n              if(hr === \"6\")  DataR.h6.push(temp);\r\n              if(hr === \"7\")  DataR.h7.push(temp);\r\n              if(hr === \"8\")  DataR.h8.push(temp);\r\n              if(hr === \"9\")  DataR.h9.push(temp);\r\n              if(hr === \"10\")  DataR.h10.push(temp);\r\n              if(hr === \"11\")  DataR.h11.push(temp);\r\n              if(hr === \"12\")  DataR.h12.push(temp);\r\n              if(hr === \"13\")  DataR.h13.push(temp);\r\n              if(hr === \"14\")  DataR.h14.push(temp);\r\n              if(hr === \"15\")  DataR.h15.push(temp);\r\n              if(hr === \"16\")  DataR.h16.push(temp);\r\n              if(hr === \"17\")  DataR.h17.push(temp);\r\n              if(hr === \"18\")  DataR.h18.push(temp);\r\n              if(hr === \"19\")  DataR.h19.push(temp);\r\n              if(hr === \"20\")  DataR.h20.push(temp);\r\n              if(hr === \"21\")  DataR.h21.push(temp);\r\n              if(hr === \"22\")  DataR.h22.push(temp);\r\n              if(hr === \"23\")  DataR.h23.push(temp);\r\n\r\n              temp10min = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 < min10) min10 = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 > max10) max10 = da.vals[a].PM10;\r\n\r\n              temp25min = da.vals[a].PM25;\r\n              if(temp25min < min25) min25 = temp25min;\r\n              temp25max = da.vals[a].PM25;\r\n              if(temp25max > max25) max25 = temp25max;\r\n\r\n              \r\n\r\n          }catch(err){}\r\n\r\n      }\r\n\r\n      this.setAves(DataR.h1);\r\n      this.setAves(DataR.h2);\r\n      this.setAves(DataR.h3);\r\n      this.setAves(DataR.h4);\r\n      this.setAves(DataR.h5);\r\n      this.setAves(DataR.h6);\r\n      this.setAves(DataR.h7);\r\n      this.setAves(DataR.h8);\r\n      this.setAves(DataR.h9);\r\n      this.setAves(DataR.h10);\r\n      this.setAves(DataR.h11);\r\n      this.setAves(DataR.h12);\r\n      this.setAves(DataR.h13);\r\n      this.setAves(DataR.h14);\r\n      this.setAves(DataR.h15);\r\n      this.setAves(DataR.h16);\r\n      this.setAves(DataR.h17);\r\n      this.setAves(DataR.h18);\r\n      this.setAves(DataR.h19);\r\n      this.setAves(DataR.h20);\r\n      this.setAves(DataR.h21);\r\n      this.setAves(DataR.h22);\r\n      this.setAves(DataR.h23);\r\n      \r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv10) MinAv10 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv10) MaxAv10 = stats.aves[a].PM10;\r\n      }\r\n\r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv25) MinAv25 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv25) MaxAv25 = stats.aves[a].PM10;\r\n      }\r\n\r\n      console.log(stats);\r\n      //for(a in stats.aves) console.log(\"Average for hour # \" + a + \" : PM10 = \" + stats.aves[a].PM10 + \" PM25 = \" + stats.aves[a].PM25)\r\n      console.log(\"Min PM10: \" + min10 + \" Max PM10: \" + max10 + \"\\nMin PM25: \" + min25 + \" Max PM25: \" + max25);\r\n      console.log(DataR)\r\n\r\n    },\r\n\r\n    setAves(arr) {\r\n        var a = 0;\r\n        for(a in arr){\r\n            if(arr[a] != undefined ) {\r\n                hold10 += arr[a].PM10; \r\n                hold25 += arr[a].PM25; \r\n                count = count + 1;\r\n                btemp = true;\r\n            }\r\n        }\r\n\r\n        btemp ? stats.aves.push({\"PM10\": hold10/count, \"PM25\": hold25/count}) :\r\n        count = 0;\r\n        hold10 = 0;\r\n        hold25 = 0;\r\n        btemp = false;\r\n    },\r\n    update () {\r\n      this.dataProc ();\r\n      var PMs = [];\r\n      var PMTWs = [];\r\n      var PM25s = [];\r\n      var s = 0;\r\n      for(s in stats.aves){\r\n        if(stats.aves[s] != \"undefined\"){\r\n          PMs.push(stats.aves[s].PM10); \r\n          PMTWs.push(s); \r\n          PM25s.push(stats.aves[s].PM25);\r\n        } \r\n      } \r\n      this.dailySalesChart.options.low = MinAv10;\r\n      this.dailySalesChart.options.high = MaxAv10;  \r\n    //console.log(\"String \" + JSON.parse(dataProc.data()));\r\n    s = 0;\r\n   // for(s in this.dailySalesChart.data.lables) this.dailySalesChart.data.lables.pop();\r\n    //s = 0;\r\n    for(s in PMTWs) this.dailySalesChart.data.labels.push(PMTWs[s]);\r\n    this.dailySalesChart.data.series = this.dailySalesChart.data.series = [PMs];\r\n    //this.dailySalesChart.data.labels = this.dailySalesChart.data.labels = [PMTWs];\r\n\r\n    this.emailsSubscriptionChart.options.low = this.emailsSubscriptionChart.options.low = MinAv25;\r\n    this.emailsSubscriptionChart.options.high = this.emailsSubscriptionChart.options.high = MaxAv25;\r\n    //s = 0;\r\n    //for(s in this.emailsSubscriptionChart.data.lables) this.emailsSubscriptionChart.data.lables.pop();\r\n    s = 0;\r\n    for(s in PMTWs) this.emailsSubscriptionChart.data.labels.push(PMTWs[s]);\r\n   // this.emailsSubscriptionChart.data.labels = this.emailsSubscriptionChart.data.labels = [PMTWs];\r\n    this.emailsSubscriptionChart.data.series = this.emailsSubscriptionChart.data.series = [PM25s];\r\n    s = 0;\r\n    //for(s in PM25s) console.log(\"PM25s: \" + PM25s[s]);\r\n\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["temp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA","file":"temp.vue","sourceRoot":"src\\views","sourcesContent":["<template>\r\n  <v-container\r\n    fill-height\r\n    fluid\r\n    grid-list-xl\r\n  >\r\n    <v-layout wrap>\r\n      <v-flex\r\n        md12\r\n        sm12\r\n        lg8\r\n      >\r\n        <v-btn\r\n        @click=\"update\"\r\n        color=\"primary\"\r\n        normal\r\n        >Update Data</v-btn>\r\n\r\n        <material-chart-card\r\n          :data=\"dailySalesChart.data\"\r\n          :options=\"dailySalesChart.options\"\r\n          color=\"info\"\r\n          type=\"Line\"\r\n        >\r\n          <h4 class=\"title font-weight-light\">PM10 Data</h4>\r\n          <template slot=\"actions\">\r\n          </template>\r\n          \r\n        </material-chart-card>\r\n\r\n      </v-flex>\r\n      <v-flex\r\n        md12\r\n        sm12\r\n        lg8\r\n      >\r\n        <material-chart-card\r\n          :data=\"emailsSubscriptionChart.data\"\r\n          :options=\"emailsSubscriptionChart.options\"\r\n          color=\"red\"\r\n          type=\"Bar\"\r\n        >\r\n          <h4 class=\"title font-weight-light\">PM25 Data</h4>\r\n\r\n        </material-chart-card>\r\n      </v-flex>\r\n      \r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nvar request = require('request')\r\n\r\nvar data;\r\nvar hr = \"\";\r\nvar mnt = \"\";\r\nvar min10 = 20;\r\nvar max10 = 0;\r\nvar min25 = 20;\r\nvar max25 = 0;\r\nvar temp10max = 0;\r\nvar temp10min = 0;\r\nvar temp25max = 0;\r\nvar temp25min = 0;\r\nvar body;\r\nvar da;\r\nvar temp;\r\nvar DataR = {};\r\nvar stats = {};\r\nvar aves = [];\r\nstats.aves = [];\r\nvar count = 0;\r\nvar hold10 = 0;\r\nvar hold25 = 0;\r\nvar btemp = false;\r\nvar MinAv10 = 0;\r\nvar MaxAv10 = 0;\r\nvar MinAv25 = 0;\r\nvar MaxAv25 = 0;\r\n\r\nDataR.h1 = []; DataR.h2 = []; DataR.h3 = []; DataR.h4 = [];DataR.h5 = [];\r\nDataR.h6 = []; DataR.h7 = []; DataR.h8 = []; DataR.h8 = []; DataR.h9 = [];\r\nDataR.h10 = []; DataR.h11 = []; DataR.h12 = []; DataR.h13 = []; DataR.h14 = [];\r\nDataR.h15 = []; DataR.h16 = []; DataR.h17 = []; DataR.h18 = []; DataR.h19 = [];\r\nDataR.h20 = []; DataR.h21 = []; DataR.h22 = []; DataR.h23 = [];\r\n\r\n\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      dailySalesChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [0, 17, 7, 17, 23, 18, 150]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 150, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      dataCompletedTasksChart: {\r\n        data: {\r\n          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\r\n          series: [\r\n            [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      emailsSubscriptionChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n          ]\r\n        },\r\n        options: {\r\n          axisX: {\r\n            showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 5,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        },\r\n        responsiveOptions: [\r\n          ['screen and (max-width: 640px)', {\r\n            seriesBarDistance: 5,\r\n            axisX: {\r\n              labelInterpolationFnc: function (value) {\r\n                return value[0]\r\n              }\r\n            }\r\n          }]\r\n        ]\r\n      },\r\n      headers: [\r\n        {\r\n          sortable: false,\r\n          text: 'ID',\r\n          value: 'id'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM10',\r\n          value: 'pm10'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM25',\r\n          value: 'pm25',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Date',\r\n          value: 'date',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Time',\r\n          value: 'time',\r\n          align: 'right'\r\n        }\r\n      ],\r\n      items: [\r\n       \r\n      ],\r\n      tabs: 0,\r\n      list: {\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    complete (index) {\r\n      this.list[index] = !this.list[index]\r\n    },\r\n      dataProc () {\r\n      request.get('http://localhost:3000',function(err,res,body1){\r\n      if(err); //TODO: handle err\r\n      if(res.statusCode !== 200 ); //etc\r\n      //console.log(body1);\r\n      da = JSON.parse(body1);\r\n      //console.log(da);\r\n      body = body1;\r\n      })\r\n      //console.log(da);\r\n      var a = 0\r\n      for(a in body){\r\n          //DataR.vals.push(\"SOMETHING\");\r\n          try{\r\n              //console.log(\"INININ\");\r\n              hr = da.vals[a].Time;\r\n              mnt = da.vals[a].Time;\r\n              mnt = mnt.substring(mnt.indexOf(\"m\") - 2, mnt.indexOf(\"m\"))\r\n              hr = hr.substring(0,hr.indexOf(\"h\"));\r\n              mnt = mnt.trim();\r\n              hr = hr.trim();\r\n              this.items.push({\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25, \"Date\": da.vals[a].Date, \"Time\": da.vals[a].Time})\r\n              temp = {\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25};\r\n              //console.log(temp);\r\n              //DataR.vals.push(\"SOMETHING\");\r\n\r\n              if(hr === \"1\")  DataR.h1.push(temp);\r\n              if(hr === \"2\")  DataR.h2.push(temp);\r\n              if(hr === \"3\")  DataR.h3.push(temp);\r\n              if(hr === \"4\")  DataR.h4.push(temp);\r\n              if(hr === \"5\")  DataR.h5.push(temp);\r\n              if(hr === \"6\")  DataR.h6.push(temp);\r\n              if(hr === \"7\")  DataR.h7.push(temp);\r\n              if(hr === \"8\")  DataR.h8.push(temp);\r\n              if(hr === \"9\")  DataR.h9.push(temp);\r\n              if(hr === \"10\")  DataR.h10.push(temp);\r\n              if(hr === \"11\")  DataR.h11.push(temp);\r\n              if(hr === \"12\")  DataR.h12.push(temp);\r\n              if(hr === \"13\")  DataR.h13.push(temp);\r\n              if(hr === \"14\")  DataR.h14.push(temp);\r\n              if(hr === \"15\")  DataR.h15.push(temp);\r\n              if(hr === \"16\")  DataR.h16.push(temp);\r\n              if(hr === \"17\")  DataR.h17.push(temp);\r\n              if(hr === \"18\")  DataR.h18.push(temp);\r\n              if(hr === \"19\")  DataR.h19.push(temp);\r\n              if(hr === \"20\")  DataR.h20.push(temp);\r\n              if(hr === \"21\")  DataR.h21.push(temp);\r\n              if(hr === \"22\")  DataR.h22.push(temp);\r\n              if(hr === \"23\")  DataR.h23.push(temp);\r\n\r\n              temp10min = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 < min10) min10 = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 > max10) max10 = da.vals[a].PM10;\r\n\r\n              temp25min = da.vals[a].PM25;\r\n              if(temp25min < min25) min25 = temp25min;\r\n              temp25max = da.vals[a].PM25;\r\n              if(temp25max > max25) max25 = temp25max;\r\n\r\n              \r\n\r\n          }catch(err){}\r\n\r\n      }\r\n\r\n      this.setAves(DataR.h1);\r\n      this.setAves(DataR.h2);\r\n      this.setAves(DataR.h3);\r\n      this.setAves(DataR.h4);\r\n      this.setAves(DataR.h5);\r\n      this.setAves(DataR.h6);\r\n      this.setAves(DataR.h7);\r\n      this.setAves(DataR.h8);\r\n      this.setAves(DataR.h9);\r\n      this.setAves(DataR.h10);\r\n      this.setAves(DataR.h11);\r\n      this.setAves(DataR.h12);\r\n      this.setAves(DataR.h13);\r\n      this.setAves(DataR.h14);\r\n      this.setAves(DataR.h15);\r\n      this.setAves(DataR.h16);\r\n      this.setAves(DataR.h17);\r\n      this.setAves(DataR.h18);\r\n      this.setAves(DataR.h19);\r\n      this.setAves(DataR.h20);\r\n      this.setAves(DataR.h21);\r\n      this.setAves(DataR.h22);\r\n      this.setAves(DataR.h23);\r\n      \r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv10) MinAv10 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv10) MaxAv10 = stats.aves[a].PM10;\r\n      }\r\n\r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv25) MinAv25 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv25) MaxAv25 = stats.aves[a].PM10;\r\n      }\r\n\r\n      console.log(stats);\r\n      //for(a in stats.aves) console.log(\"Average for hour # \" + a + \" : PM10 = \" + stats.aves[a].PM10 + \" PM25 = \" + stats.aves[a].PM25)\r\n      console.log(\"Min PM10: \" + min10 + \" Max PM10: \" + max10 + \"\\nMin PM25: \" + min25 + \" Max PM25: \" + max25);\r\n      console.log(DataR)\r\n\r\n    },\r\n\r\n    setAves(arr) {\r\n        var a = 0;\r\n        for(a in arr){\r\n            if(arr[a] != undefined ) {\r\n                hold10 += arr[a].PM10; \r\n                hold25 += arr[a].PM25; \r\n                count = count + 1;\r\n                btemp = true;\r\n            }\r\n        }\r\n\r\n        btemp ? stats.aves.push({\"PM10\": hold10/count, \"PM25\": hold25/count}) :\r\n        count = 0;\r\n        hold10 = 0;\r\n        hold25 = 0;\r\n        btemp = false;\r\n    },\r\n    update () {\r\n      this.dataProc ();\r\n      var PMs = [];\r\n      var PMTWs = [];\r\n      var PM25s = [];\r\n      var s = 0;\r\n      for(s in stats.aves){\r\n        if(stats.aves[s] != \"undefined\"){\r\n          PMs.push(stats.aves[s].PM10); \r\n          PMTWs.push(s); \r\n          PM25s.push(stats.aves[s].PM25);\r\n        } \r\n      } \r\n      this.dailySalesChart.options.low = MinAv10;\r\n      this.dailySalesChart.options.high = MaxAv10;  \r\n    //console.log(\"String \" + JSON.parse(dataProc.data()));\r\n    s = 0;\r\n   // for(s in this.dailySalesChart.data.lables) this.dailySalesChart.data.lables.pop();\r\n    //s = 0;\r\n    for(s in PMTWs) this.dailySalesChart.data.labels.push(PMTWs[s]);\r\n    this.dailySalesChart.data.series = this.dailySalesChart.data.series = [PMs];\r\n    //this.dailySalesChart.data.labels = this.dailySalesChart.data.labels = [PMTWs];\r\n\r\n    this.emailsSubscriptionChart.options.low = this.emailsSubscriptionChart.options.low = MinAv25;\r\n    this.emailsSubscriptionChart.options.high = this.emailsSubscriptionChart.options.high = MaxAv25;\r\n    //s = 0;\r\n    //for(s in this.emailsSubscriptionChart.data.lables) this.emailsSubscriptionChart.data.lables.pop();\r\n    s = 0;\r\n    for(s in PMTWs) this.emailsSubscriptionChart.data.labels.push(PMTWs[s]);\r\n   // this.emailsSubscriptionChart.data.labels = this.emailsSubscriptionChart.data.labels = [PMTWs];\r\n    this.emailsSubscriptionChart.data.series = this.emailsSubscriptionChart.data.series = [PM25s];\r\n    s = 0;\r\n    //for(s in PM25s) console.log(\"PM25s: \" + PM25s[s]);\r\n\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n"]}]}