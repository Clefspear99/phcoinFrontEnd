{"remainingRequest":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\viewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\viewer.vue","mtime":1545013107826},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nvar request = require(\"request\");\r\nvar blockChain = [];\r\nvar privateKey;\r\nvar temp = [];\r\n\r\nvar headers = [\r\n  {\r\n    text: \"BlockHash\",\r\n    value: \"Block Hash\"\r\n  },\r\n  {\r\n    text: \"GenTime\",\r\n    value: \"Gen Time\"\r\n  },\r\n\r\n  {\r\n    text: \"Nonce\",\r\n    value: \"None\"\r\n  },\r\n  {\r\n    text: \"NumberOfTransactions\",\r\n    value: \"Number of Transactions\"\r\n  },\r\n    {\r\n    text: \"BlockNumber\",\r\n    value: \"Block Number\"\r\n  },\r\n  {\r\n    text: \"PreviousBlockHash\",\r\n    value: \"Previous Block Hash\"\r\n  }\r\n];\r\n\r\nvar subHeaders = [\r\n  {\r\n    text: \"Sender Name\",\r\n    value: \"Sender Name\"\r\n  },\r\n  {\r\n    text: \"Sender Key\",\r\n    value: \"Sender Key\"\r\n  },\r\n\r\n  {\r\n    text: \"Amount\",\r\n    value: \"Amount\"\r\n  },\r\n  {\r\n    text: \"Receiver Name\",\r\n    value: \"Receiver Name\"\r\n  },\r\n    {\r\n    text: \"Receiver Key\",\r\n    value: \"Time\"\r\n  }\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      headers,\r\n      blockChain,\r\n      privateKey,\r\n      subHeaders\r\n    };\r\n  },\r\n  methods: {\r\n    getChain() {\r\n      request.get(\"http://localhost:3000/chain\", function(err, res, body) {\r\n        //console.log(body);\r\n        temp = body;\r\n      });\r\n      //console.log(users);\r\n      temp = JSON.parse(temp);\r\n      this.blockChain = temp;\r\n      var k = 0;\r\n      for(k in temp) console.log(temp[k]);\r\n\r\n    },\r\n    login(){\r\n      this.$router.push(\"/login\");\r\n    },\r\n    logout(){\r\n      this.$router.push(\"/logout\");\r\n    },\r\n    Mine() {\r\n      var data = { name: \"siad\" };\r\n      var options = {\r\n        uri: \"http://localhost:3000/newuser\",\r\n        method: \"POST\",\r\n        json: data\r\n      };\r\n      //console.log(JSON.stringify(mainItems));\r\n      //console.log(JSON.stringify(jsData))\r\n      request(options, function(error, response, body) {\r\n        if (!error && response.statusCode == 200) {\r\n          console.log(body);\r\n        }\r\n      });\r\n      data = { name: \"siad\" };\r\n      options = {\r\n        uri: \"http://localhost:3000/mine\",\r\n        method: \"POST\",\r\n        json: data\r\n      };\r\n      //console.log(JSON.stringify(mainItems));\r\n      //console.log(JSON.stringify(jsData))\r\n      request(options, function(error, response, body) {\r\n        if (!error && response.statusCode == 200) {\r\n          console.log(body);\r\n        }\r\n      });\r\n    },\r\n    Send() {},\r\n\r\n  },\r\n  beforeMount() {\r\n    this.getChain();\r\n  }\r\n};\r\n",{"version":3,"sources":["viewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"viewer.vue","sourceRoot":"src\\views","sourcesContent":["<template>\r\n  <v-container fill-height fluid grid-list-xl>\r\n    <v-layout wrap>\r\n      <v-flex>\r\n        <template>\r\n          <v-flex>\r\n          <v-btn large color=\"primary\" round @click=\"logout\">Logout</v-btn>\r\n          <v-btn large color=\"primary\" round @click=\"login\">Login</v-btn>\r\n          </v-flex>\r\n          <v-card dark width=\"1500\"\r\n          >\r\n            <v-img\r\n              src=\"https://blog.equinix.com/wp-content/uploads/2018/06/blockchain.jpg\"\r\n              aspect-ratio=\"2.75\"\r\n            ></v-img>\r\n\r\n            <v-card-title primary-title>\r\n              <div>\r\n                <h3 class=\"headline mb-0\">Current Blocks</h3>\r\n              </div>\r\n            </v-card-title>\r\n            <v-data-table\r\n              :headers=\"headers\"\r\n              :items=\"blockChain\"\r\n              id=\"props.item.blockNumber\"\r\n              expand\r\n              class=\"elevation-1\"\r\n            >\r\n              <template slot=\"items\" scope=\"props\">\r\n                <tr @click=\"props.expanded = !props.expanded\">\r\n                  <td class=\"text-xs\">{{ props.item.blockGenTime }}</td>\r\n                  <td class=\"text-xs\">{{ props.item.blockNumber }}</td>\r\n                  <td class=\"text-xs\">{{ props.item.nonce }}</td>\r\n                  <td class=\"text-xs\">{{ props.item.numbOfTrans }}</td>\r\n                  <td class=\"text-xs\">{{ props.item.blockHash }}</td>\r\n                  <td class=\"text-xs\">{{ props.item.prevBlockHash }}</td>\r\n                </tr>\r\n              </template>\r\n              <template slot=\"expand\" scope=\"props\">\r\n                <v-card class=\"elevation-10\">\r\n                  <v-card-text>\r\n                    <v-data-table\r\n                      :headers=\"subHeaders\"\r\n                      :items=\"props.item.Transaction\"\r\n                      item-key=\"props.item.Transaction.senderName\"\r\n                      id=\"props.item.senderName\"\r\n                      hide-actions\r\n                      class=\"elevation-10\"\r\n                    >\r\n                      <template slot=\"items\" scope=\"props\">\r\n                        <td class=\"text-xs\">{{ props.item.senderName }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.senderKey }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.senderSig }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.amount }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.receiverName }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.receiverKey }}</td>\r\n                        <td class=\"text-xs\">{{ props.item.time }}</td>\r\n\r\n                      </template>\r\n                    </v-data-table>\r\n                  </v-card-text>\r\n                </v-card>\r\n              </template>\r\n            </v-data-table>\r\n            <v-card-actions>\r\n              <v-btn large flat color=\"success\" @click=\"getChain()\">Show Data</v-btn>\r\n            </v-card-actions>\r\n          </v-card>           \r\n        </template>\r\n      </v-flex>\r\n\r\n      <template></template>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n      \r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nvar request = require(\"request\");\r\nvar blockChain = [];\r\nvar privateKey;\r\nvar temp = [];\r\n\r\nvar headers = [\r\n  {\r\n    text: \"BlockHash\",\r\n    value: \"Block Hash\"\r\n  },\r\n  {\r\n    text: \"GenTime\",\r\n    value: \"Gen Time\"\r\n  },\r\n\r\n  {\r\n    text: \"Nonce\",\r\n    value: \"None\"\r\n  },\r\n  {\r\n    text: \"NumberOfTransactions\",\r\n    value: \"Number of Transactions\"\r\n  },\r\n    {\r\n    text: \"BlockNumber\",\r\n    value: \"Block Number\"\r\n  },\r\n  {\r\n    text: \"PreviousBlockHash\",\r\n    value: \"Previous Block Hash\"\r\n  }\r\n];\r\n\r\nvar subHeaders = [\r\n  {\r\n    text: \"Sender Name\",\r\n    value: \"Sender Name\"\r\n  },\r\n  {\r\n    text: \"Sender Key\",\r\n    value: \"Sender Key\"\r\n  },\r\n\r\n  {\r\n    text: \"Amount\",\r\n    value: \"Amount\"\r\n  },\r\n  {\r\n    text: \"Receiver Name\",\r\n    value: \"Receiver Name\"\r\n  },\r\n    {\r\n    text: \"Receiver Key\",\r\n    value: \"Time\"\r\n  }\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      headers,\r\n      blockChain,\r\n      privateKey,\r\n      subHeaders\r\n    };\r\n  },\r\n  methods: {\r\n    getChain() {\r\n      request.get(\"http://localhost:3000/chain\", function(err, res, body) {\r\n        //console.log(body);\r\n        temp = body;\r\n      });\r\n      //console.log(users);\r\n      temp = JSON.parse(temp);\r\n      this.blockChain = temp;\r\n      var k = 0;\r\n      for(k in temp) console.log(temp[k]);\r\n\r\n    },\r\n    login(){\r\n      this.$router.push(\"/login\");\r\n    },\r\n    logout(){\r\n      this.$router.push(\"/logout\");\r\n    },\r\n    Mine() {\r\n      var data = { name: \"siad\" };\r\n      var options = {\r\n        uri: \"http://localhost:3000/newuser\",\r\n        method: \"POST\",\r\n        json: data\r\n      };\r\n      //console.log(JSON.stringify(mainItems));\r\n      //console.log(JSON.stringify(jsData))\r\n      request(options, function(error, response, body) {\r\n        if (!error && response.statusCode == 200) {\r\n          console.log(body);\r\n        }\r\n      });\r\n      data = { name: \"siad\" };\r\n      options = {\r\n        uri: \"http://localhost:3000/mine\",\r\n        method: \"POST\",\r\n        json: data\r\n      };\r\n      //console.log(JSON.stringify(mainItems));\r\n      //console.log(JSON.stringify(jsData))\r\n      request(options, function(error, response, body) {\r\n        if (!error && response.statusCode == 200) {\r\n          console.log(body);\r\n        }\r\n      });\r\n    },\r\n    Send() {},\r\n\r\n  },\r\n  beforeMount() {\r\n    this.getChain();\r\n  }\r\n};\r\n</script>\r\n"]}]}