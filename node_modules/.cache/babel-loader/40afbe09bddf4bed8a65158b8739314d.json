{"remainingRequest":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\temp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\src\\views\\temp.vue","mtime":1543894471023},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ibra\\Documents\\Workspace\\coin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar request = require('request');\n\nvar data;\nvar hr = \"\";\nvar mnt = \"\";\nvar min10 = 20;\nvar max10 = 0;\nvar min25 = 20;\nvar max25 = 0;\nvar temp10max = 0;\nvar temp10min = 0;\nvar temp25max = 0;\nvar temp25min = 0;\nvar body;\nvar da;\nvar temp;\nvar DataR = {};\nvar stats = {};\nvar aves = [];\nstats.aves = [];\nvar count = 0;\nvar hold10 = 0;\nvar hold25 = 0;\nvar btemp = false;\nvar MinAv10 = 0;\nvar MaxAv10 = 0;\nvar MinAv25 = 0;\nvar MaxAv25 = 0;\nDataR.h1 = [];\nDataR.h2 = [];\nDataR.h3 = [];\nDataR.h4 = [];\nDataR.h5 = [];\nDataR.h6 = [];\nDataR.h7 = [];\nDataR.h8 = [];\nDataR.h8 = [];\nDataR.h9 = [];\nDataR.h10 = [];\nDataR.h11 = [];\nDataR.h12 = [];\nDataR.h13 = [];\nDataR.h14 = [];\nDataR.h15 = [];\nDataR.h16 = [];\nDataR.h17 = [];\nDataR.h18 = [];\nDataR.h19 = [];\nDataR.h20 = [];\nDataR.h21 = [];\nDataR.h22 = [];\nDataR.h23 = [];\nexport default {\n  data: function data() {\n    return {\n      dailySalesChart: {\n        data: {\n          labels: [],\n          series: [[0, 17, 7, 17, 23, 18, 150]]\n        },\n        options: {\n          lineSmooth: this.$chartist.Interpolation.cardinal({\n            tension: 0\n          }),\n          low: 0,\n          high: 150,\n          // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }\n      },\n      dataCompletedTasksChart: {\n        data: {\n          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n          series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n        },\n        options: {\n          lineSmooth: this.$chartist.Interpolation.cardinal({\n            tension: 0\n          }),\n          low: 0,\n          high: 1000,\n          // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }\n      },\n      emailsSubscriptionChart: {\n        data: {\n          labels: [],\n          series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n        },\n        options: {\n          axisX: {\n            showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: {\n            top: 0,\n            right: 5,\n            bottom: 0,\n            left: 0\n          }\n        },\n        responsiveOptions: [['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function labelInterpolationFnc(value) {\n              return value[0];\n            }\n          }\n        }]]\n      },\n      headers: [{\n        sortable: false,\n        text: 'ID',\n        value: 'id'\n      }, {\n        sortable: false,\n        text: 'PM10',\n        value: 'pm10'\n      }, {\n        sortable: false,\n        text: 'PM25',\n        value: 'pm25',\n        align: 'right'\n      }, {\n        sortable: false,\n        text: 'Date',\n        value: 'date',\n        align: 'right'\n      }, {\n        sortable: false,\n        text: 'Time',\n        value: 'time',\n        align: 'right'\n      }],\n      items: [],\n      tabs: 0,\n      list: {\n        0: false,\n        1: false,\n        2: false\n      }\n    };\n  },\n  methods: {\n    complete: function complete(index) {\n      this.list[index] = !this.list[index];\n    },\n    dataProc: function dataProc() {\n      request.get('http://localhost:3000', function (err, res, body1) {\n        if (err) ; //TODO: handle err\n\n        if (res.statusCode !== 200) ; //etc\n        //console.log(body1);\n\n        da = JSON.parse(body1); //console.log(da);\n\n        body = body1;\n      }); //console.log(da);\n\n      var a = 0;\n\n      for (a in body) {\n        //DataR.vals.push(\"SOMETHING\");\n        try {\n          //console.log(\"INININ\");\n          hr = da.vals[a].Time;\n          mnt = da.vals[a].Time;\n          mnt = mnt.substring(mnt.indexOf(\"m\") - 2, mnt.indexOf(\"m\"));\n          hr = hr.substring(0, hr.indexOf(\"h\"));\n          mnt = mnt.trim();\n          hr = hr.trim();\n          this.items.push({\n            \"PM10\": da.vals[a].PM10,\n            \"PM25\": da.vals[a].PM25,\n            \"Date\": da.vals[a].Date,\n            \"Time\": da.vals[a].Time\n          });\n          temp = {\n            \"PM10\": da.vals[a].PM10,\n            \"PM25\": da.vals[a].PM25\n          }; //console.log(temp);\n          //DataR.vals.push(\"SOMETHING\");\n\n          if (hr === \"1\") DataR.h1.push(temp);\n          if (hr === \"2\") DataR.h2.push(temp);\n          if (hr === \"3\") DataR.h3.push(temp);\n          if (hr === \"4\") DataR.h4.push(temp);\n          if (hr === \"5\") DataR.h5.push(temp);\n          if (hr === \"6\") DataR.h6.push(temp);\n          if (hr === \"7\") DataR.h7.push(temp);\n          if (hr === \"8\") DataR.h8.push(temp);\n          if (hr === \"9\") DataR.h9.push(temp);\n          if (hr === \"10\") DataR.h10.push(temp);\n          if (hr === \"11\") DataR.h11.push(temp);\n          if (hr === \"12\") DataR.h12.push(temp);\n          if (hr === \"13\") DataR.h13.push(temp);\n          if (hr === \"14\") DataR.h14.push(temp);\n          if (hr === \"15\") DataR.h15.push(temp);\n          if (hr === \"16\") DataR.h16.push(temp);\n          if (hr === \"17\") DataR.h17.push(temp);\n          if (hr === \"18\") DataR.h18.push(temp);\n          if (hr === \"19\") DataR.h19.push(temp);\n          if (hr === \"20\") DataR.h20.push(temp);\n          if (hr === \"21\") DataR.h21.push(temp);\n          if (hr === \"22\") DataR.h22.push(temp);\n          if (hr === \"23\") DataR.h23.push(temp);\n          temp10min = da.vals[a].PM10;\n          if (da.vals[a].PM10 < min10) min10 = da.vals[a].PM10;\n          if (da.vals[a].PM10 > max10) max10 = da.vals[a].PM10;\n          temp25min = da.vals[a].PM25;\n          if (temp25min < min25) min25 = temp25min;\n          temp25max = da.vals[a].PM25;\n          if (temp25max > max25) max25 = temp25max;\n        } catch (err) {}\n      }\n\n      this.setAves(DataR.h1);\n      this.setAves(DataR.h2);\n      this.setAves(DataR.h3);\n      this.setAves(DataR.h4);\n      this.setAves(DataR.h5);\n      this.setAves(DataR.h6);\n      this.setAves(DataR.h7);\n      this.setAves(DataR.h8);\n      this.setAves(DataR.h9);\n      this.setAves(DataR.h10);\n      this.setAves(DataR.h11);\n      this.setAves(DataR.h12);\n      this.setAves(DataR.h13);\n      this.setAves(DataR.h14);\n      this.setAves(DataR.h15);\n      this.setAves(DataR.h16);\n      this.setAves(DataR.h17);\n      this.setAves(DataR.h18);\n      this.setAves(DataR.h19);\n      this.setAves(DataR.h20);\n      this.setAves(DataR.h21);\n      this.setAves(DataR.h22);\n      this.setAves(DataR.h23);\n\n      for (a in stats.aves) {\n        if (stats.aves[a].PM10 < MinAv10) MinAv10 = stats.aves[a].PM10;\n        if (stats.aves[a].PM10 > MaxAv10) MaxAv10 = stats.aves[a].PM10;\n      }\n\n      for (a in stats.aves) {\n        if (stats.aves[a].PM10 < MinAv25) MinAv25 = stats.aves[a].PM10;\n        if (stats.aves[a].PM10 > MaxAv25) MaxAv25 = stats.aves[a].PM10;\n      }\n\n      console.log(stats); //for(a in stats.aves) console.log(\"Average for hour # \" + a + \" : PM10 = \" + stats.aves[a].PM10 + \" PM25 = \" + stats.aves[a].PM25)\n\n      console.log(\"Min PM10: \" + min10 + \" Max PM10: \" + max10 + \"\\nMin PM25: \" + min25 + \" Max PM25: \" + max25);\n      console.log(DataR);\n    },\n    setAves: function setAves(arr) {\n      var a = 0;\n\n      for (a in arr) {\n        if (arr[a] != undefined) {\n          hold10 += arr[a].PM10;\n          hold25 += arr[a].PM25;\n          count = count + 1;\n          btemp = true;\n        }\n      }\n\n      btemp ? stats.aves.push({\n        \"PM10\": hold10 / count,\n        \"PM25\": hold25 / count\n      }) : count = 0;\n      hold10 = 0;\n      hold25 = 0;\n      btemp = false;\n    },\n    update: function update() {\n      this.dataProc();\n      var PMs = [];\n      var PMTWs = [];\n      var PM25s = [];\n      var s = 0;\n\n      for (s in stats.aves) {\n        if (stats.aves[s] != \"undefined\") {\n          PMs.push(stats.aves[s].PM10);\n          PMTWs.push(s);\n          PM25s.push(stats.aves[s].PM25);\n        }\n      }\n\n      this.dailySalesChart.options.low = MinAv10;\n      this.dailySalesChart.options.high = MaxAv10; //console.log(\"String \" + JSON.parse(dataProc.data()));\n\n      s = 0; // for(s in this.dailySalesChart.data.lables) this.dailySalesChart.data.lables.pop();\n      //s = 0;\n\n      for (s in PMTWs) {\n        this.dailySalesChart.data.labels.push(PMTWs[s]);\n      }\n\n      this.dailySalesChart.data.series = this.dailySalesChart.data.series = [PMs]; //this.dailySalesChart.data.labels = this.dailySalesChart.data.labels = [PMTWs];\n\n      this.emailsSubscriptionChart.options.low = this.emailsSubscriptionChart.options.low = MinAv25;\n      this.emailsSubscriptionChart.options.high = this.emailsSubscriptionChart.options.high = MaxAv25; //s = 0;\n      //for(s in this.emailsSubscriptionChart.data.lables) this.emailsSubscriptionChart.data.lables.pop();\n\n      s = 0;\n\n      for (s in PMTWs) {\n        this.emailsSubscriptionChart.data.labels.push(PMTWs[s]);\n      } // this.emailsSubscriptionChart.data.labels = this.emailsSubscriptionChart.data.labels = [PMTWs];\n\n\n      this.emailsSubscriptionChart.data.series = this.emailsSubscriptionChart.data.series = [PM25s];\n      s = 0; //for(s in PM25s) console.log(\"PM25s: \" + PM25s[s]);\n    }\n  }\n};",{"version":3,"sources":["temp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container\r\n    fill-height\r\n    fluid\r\n    grid-list-xl\r\n  >\r\n    <v-layout wrap>\r\n      <v-flex\r\n        md12\r\n        sm12\r\n        lg8\r\n      >\r\n        <v-btn\r\n        @click=\"update\"\r\n        color=\"primary\"\r\n        normal\r\n        >Update Data</v-btn>\r\n\r\n        <material-chart-card\r\n          :data=\"dailySalesChart.data\"\r\n          :options=\"dailySalesChart.options\"\r\n          color=\"info\"\r\n          type=\"Line\"\r\n        >\r\n          <h4 class=\"title font-weight-light\">PM10 Data</h4>\r\n          <template slot=\"actions\">\r\n          </template>\r\n          \r\n        </material-chart-card>\r\n\r\n      </v-flex>\r\n      <v-flex\r\n        md12\r\n        sm12\r\n        lg8\r\n      >\r\n        <material-chart-card\r\n          :data=\"emailsSubscriptionChart.data\"\r\n          :options=\"emailsSubscriptionChart.options\"\r\n          color=\"red\"\r\n          type=\"Bar\"\r\n        >\r\n          <h4 class=\"title font-weight-light\">PM25 Data</h4>\r\n\r\n        </material-chart-card>\r\n      </v-flex>\r\n      \r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nvar request = require('request')\r\n\r\nvar data;\r\nvar hr = \"\";\r\nvar mnt = \"\";\r\nvar min10 = 20;\r\nvar max10 = 0;\r\nvar min25 = 20;\r\nvar max25 = 0;\r\nvar temp10max = 0;\r\nvar temp10min = 0;\r\nvar temp25max = 0;\r\nvar temp25min = 0;\r\nvar body;\r\nvar da;\r\nvar temp;\r\nvar DataR = {};\r\nvar stats = {};\r\nvar aves = [];\r\nstats.aves = [];\r\nvar count = 0;\r\nvar hold10 = 0;\r\nvar hold25 = 0;\r\nvar btemp = false;\r\nvar MinAv10 = 0;\r\nvar MaxAv10 = 0;\r\nvar MinAv25 = 0;\r\nvar MaxAv25 = 0;\r\n\r\nDataR.h1 = []; DataR.h2 = []; DataR.h3 = []; DataR.h4 = [];DataR.h5 = [];\r\nDataR.h6 = []; DataR.h7 = []; DataR.h8 = []; DataR.h8 = []; DataR.h9 = [];\r\nDataR.h10 = []; DataR.h11 = []; DataR.h12 = []; DataR.h13 = []; DataR.h14 = [];\r\nDataR.h15 = []; DataR.h16 = []; DataR.h17 = []; DataR.h18 = []; DataR.h19 = [];\r\nDataR.h20 = []; DataR.h21 = []; DataR.h22 = []; DataR.h23 = [];\r\n\r\n\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      dailySalesChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [0, 17, 7, 17, 23, 18, 150]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 150, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      dataCompletedTasksChart: {\r\n        data: {\r\n          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\r\n          series: [\r\n            [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n        },\r\n        options: {\r\n          lineSmooth: this.$chartist.Interpolation.cardinal({\r\n            tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        }\r\n      },\r\n      emailsSubscriptionChart: {\r\n        data: {\r\n          labels: [],\r\n          series: [\r\n            [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n          ]\r\n        },\r\n        options: {\r\n          axisX: {\r\n            showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: {\r\n            top: 0,\r\n            right: 5,\r\n            bottom: 0,\r\n            left: 0\r\n          }\r\n        },\r\n        responsiveOptions: [\r\n          ['screen and (max-width: 640px)', {\r\n            seriesBarDistance: 5,\r\n            axisX: {\r\n              labelInterpolationFnc: function (value) {\r\n                return value[0]\r\n              }\r\n            }\r\n          }]\r\n        ]\r\n      },\r\n      headers: [\r\n        {\r\n          sortable: false,\r\n          text: 'ID',\r\n          value: 'id'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM10',\r\n          value: 'pm10'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'PM25',\r\n          value: 'pm25',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Date',\r\n          value: 'date',\r\n          align: 'right'\r\n        },\r\n        {\r\n          sortable: false,\r\n          text: 'Time',\r\n          value: 'time',\r\n          align: 'right'\r\n        }\r\n      ],\r\n      items: [\r\n       \r\n      ],\r\n      tabs: 0,\r\n      list: {\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    complete (index) {\r\n      this.list[index] = !this.list[index]\r\n    },\r\n      dataProc () {\r\n      request.get('http://localhost:3000',function(err,res,body1){\r\n      if(err); //TODO: handle err\r\n      if(res.statusCode !== 200 ); //etc\r\n      //console.log(body1);\r\n      da = JSON.parse(body1);\r\n      //console.log(da);\r\n      body = body1;\r\n      })\r\n      //console.log(da);\r\n      var a = 0\r\n      for(a in body){\r\n          //DataR.vals.push(\"SOMETHING\");\r\n          try{\r\n              //console.log(\"INININ\");\r\n              hr = da.vals[a].Time;\r\n              mnt = da.vals[a].Time;\r\n              mnt = mnt.substring(mnt.indexOf(\"m\") - 2, mnt.indexOf(\"m\"))\r\n              hr = hr.substring(0,hr.indexOf(\"h\"));\r\n              mnt = mnt.trim();\r\n              hr = hr.trim();\r\n              this.items.push({\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25, \"Date\": da.vals[a].Date, \"Time\": da.vals[a].Time})\r\n              temp = {\"PM10\": da.vals[a].PM10, \"PM25\": da.vals[a].PM25};\r\n              //console.log(temp);\r\n              //DataR.vals.push(\"SOMETHING\");\r\n\r\n              if(hr === \"1\")  DataR.h1.push(temp);\r\n              if(hr === \"2\")  DataR.h2.push(temp);\r\n              if(hr === \"3\")  DataR.h3.push(temp);\r\n              if(hr === \"4\")  DataR.h4.push(temp);\r\n              if(hr === \"5\")  DataR.h5.push(temp);\r\n              if(hr === \"6\")  DataR.h6.push(temp);\r\n              if(hr === \"7\")  DataR.h7.push(temp);\r\n              if(hr === \"8\")  DataR.h8.push(temp);\r\n              if(hr === \"9\")  DataR.h9.push(temp);\r\n              if(hr === \"10\")  DataR.h10.push(temp);\r\n              if(hr === \"11\")  DataR.h11.push(temp);\r\n              if(hr === \"12\")  DataR.h12.push(temp);\r\n              if(hr === \"13\")  DataR.h13.push(temp);\r\n              if(hr === \"14\")  DataR.h14.push(temp);\r\n              if(hr === \"15\")  DataR.h15.push(temp);\r\n              if(hr === \"16\")  DataR.h16.push(temp);\r\n              if(hr === \"17\")  DataR.h17.push(temp);\r\n              if(hr === \"18\")  DataR.h18.push(temp);\r\n              if(hr === \"19\")  DataR.h19.push(temp);\r\n              if(hr === \"20\")  DataR.h20.push(temp);\r\n              if(hr === \"21\")  DataR.h21.push(temp);\r\n              if(hr === \"22\")  DataR.h22.push(temp);\r\n              if(hr === \"23\")  DataR.h23.push(temp);\r\n\r\n              temp10min = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 < min10) min10 = da.vals[a].PM10;\r\n              if(da.vals[a].PM10 > max10) max10 = da.vals[a].PM10;\r\n\r\n              temp25min = da.vals[a].PM25;\r\n              if(temp25min < min25) min25 = temp25min;\r\n              temp25max = da.vals[a].PM25;\r\n              if(temp25max > max25) max25 = temp25max;\r\n\r\n              \r\n\r\n          }catch(err){}\r\n\r\n      }\r\n\r\n      this.setAves(DataR.h1);\r\n      this.setAves(DataR.h2);\r\n      this.setAves(DataR.h3);\r\n      this.setAves(DataR.h4);\r\n      this.setAves(DataR.h5);\r\n      this.setAves(DataR.h6);\r\n      this.setAves(DataR.h7);\r\n      this.setAves(DataR.h8);\r\n      this.setAves(DataR.h9);\r\n      this.setAves(DataR.h10);\r\n      this.setAves(DataR.h11);\r\n      this.setAves(DataR.h12);\r\n      this.setAves(DataR.h13);\r\n      this.setAves(DataR.h14);\r\n      this.setAves(DataR.h15);\r\n      this.setAves(DataR.h16);\r\n      this.setAves(DataR.h17);\r\n      this.setAves(DataR.h18);\r\n      this.setAves(DataR.h19);\r\n      this.setAves(DataR.h20);\r\n      this.setAves(DataR.h21);\r\n      this.setAves(DataR.h22);\r\n      this.setAves(DataR.h23);\r\n      \r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv10) MinAv10 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv10) MaxAv10 = stats.aves[a].PM10;\r\n      }\r\n\r\n       for(a in stats.aves)\r\n      {\r\n        if(stats.aves[a].PM10 < MinAv25) MinAv25 = stats.aves[a].PM10;\r\n        if(stats.aves[a].PM10 > MaxAv25) MaxAv25 = stats.aves[a].PM10;\r\n      }\r\n\r\n      console.log(stats);\r\n      //for(a in stats.aves) console.log(\"Average for hour # \" + a + \" : PM10 = \" + stats.aves[a].PM10 + \" PM25 = \" + stats.aves[a].PM25)\r\n      console.log(\"Min PM10: \" + min10 + \" Max PM10: \" + max10 + \"\\nMin PM25: \" + min25 + \" Max PM25: \" + max25);\r\n      console.log(DataR)\r\n\r\n    },\r\n\r\n    setAves(arr) {\r\n        var a = 0;\r\n        for(a in arr){\r\n            if(arr[a] != undefined ) {\r\n                hold10 += arr[a].PM10; \r\n                hold25 += arr[a].PM25; \r\n                count = count + 1;\r\n                btemp = true;\r\n            }\r\n        }\r\n\r\n        btemp ? stats.aves.push({\"PM10\": hold10/count, \"PM25\": hold25/count}) :\r\n        count = 0;\r\n        hold10 = 0;\r\n        hold25 = 0;\r\n        btemp = false;\r\n    },\r\n    update () {\r\n      this.dataProc ();\r\n      var PMs = [];\r\n      var PMTWs = [];\r\n      var PM25s = [];\r\n      var s = 0;\r\n      for(s in stats.aves){\r\n        if(stats.aves[s] != \"undefined\"){\r\n          PMs.push(stats.aves[s].PM10); \r\n          PMTWs.push(s); \r\n          PM25s.push(stats.aves[s].PM25);\r\n        } \r\n      } \r\n      this.dailySalesChart.options.low = MinAv10;\r\n      this.dailySalesChart.options.high = MaxAv10;  \r\n    //console.log(\"String \" + JSON.parse(dataProc.data()));\r\n    s = 0;\r\n   // for(s in this.dailySalesChart.data.lables) this.dailySalesChart.data.lables.pop();\r\n    //s = 0;\r\n    for(s in PMTWs) this.dailySalesChart.data.labels.push(PMTWs[s]);\r\n    this.dailySalesChart.data.series = this.dailySalesChart.data.series = [PMs];\r\n    //this.dailySalesChart.data.labels = this.dailySalesChart.data.labels = [PMTWs];\r\n\r\n    this.emailsSubscriptionChart.options.low = this.emailsSubscriptionChart.options.low = MinAv25;\r\n    this.emailsSubscriptionChart.options.high = this.emailsSubscriptionChart.options.high = MaxAv25;\r\n    //s = 0;\r\n    //for(s in this.emailsSubscriptionChart.data.lables) this.emailsSubscriptionChart.data.lables.pop();\r\n    s = 0;\r\n    for(s in PMTWs) this.emailsSubscriptionChart.data.labels.push(PMTWs[s]);\r\n   // this.emailsSubscriptionChart.data.labels = this.emailsSubscriptionChart.data.labels = [PMTWs];\r\n    this.emailsSubscriptionChart.data.series = this.emailsSubscriptionChart.data.series = [PM25s];\r\n    s = 0;\r\n    //for(s in PM25s) console.log(\"PM25s: \" + PM25s[s]);\r\n\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\views"}]}